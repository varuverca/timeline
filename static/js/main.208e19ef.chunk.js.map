{"version":3,"sources":["Timeline.js","reportWebVitals.js","index.js"],"names":["Timeline","useState","completed","setCompleted","currentStep","setStep","labelAlign","setAlign","labelUpDown","setUpDown","labels","setLabels","className","Stepper","map","label","i","selected","toString","Step","onClick","updateStep","Controls","props","current","stepShift","value","length","console","log","type","id","name","checked","onChange","e","target","htmlFor","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAGe,SAASA,IAEtB,MAC8BC,oBAAS,GADvC,mBACGC,EADH,KACcC,EADd,OAE2BF,mBAAS,GAFpC,mBAEGG,EAFH,KAEgBC,EAFhB,OAI2BJ,mBAAS,kBAJpC,mBAIGK,EAJH,KAIeC,EAJf,OAK6BN,mBAAS,eALtC,mBAKGO,EALH,KAKgBC,EALhB,OAOwBR,mBAAS,CAC7B,SACA,SACA,SACA,WAXJ,mBAOGS,EAPH,KAOWC,EAPX,KAcA,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qCACA,6CACGV,EAA0D,GAA9C,sBAAMU,UAAU,SAAhB,yBADf,IAGmB,IAAhBR,EAAqB,gBAAtB,kBAAmDA,GAHrD,UAMF,cAAC,EAAD,CACEM,OAAQA,EACRL,QAASA,EACTH,UAAWA,EACXE,YAAaA,EACbD,aAAcA,EACdK,YAAaA,EACbF,WAAYA,IAEd,cAAC,EAAD,CACEH,aAAcA,EACdC,YAAaA,EACbI,YAAaA,EACbF,WAAYA,EACZG,UAAWA,EACXP,UAAWA,EACXS,UAAWA,EACXJ,SAAUA,EACVF,QAASA,EACTK,OAAQA,OAOhB,IAAMG,EAAU,SAAC,GAAwF,IAAtFH,EAAqF,EAArFA,OAAQL,EAA6E,EAA7EA,QAASD,EAAoE,EAApEA,YAAaF,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,aAAcK,EAA8B,EAA9BA,YAAaF,EAAiB,EAAjBA,WACrF,OACE,qBAAKM,UAAS,kBAAaJ,EAAb,YAA4BF,GAA1C,SACGI,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,cAAC,EAAD,CACEC,SAAUb,IAAgBY,EAAI,EAC9Bb,aAAcA,EACdC,YAAaA,EACbF,UAAWA,EACXG,QAASA,EACTU,MAAOA,EAEPC,EAAGA,GADEA,EAAEE,kBAQXC,EAAO,SAAC,GAA2E,IAAzEJ,EAAwE,EAAxEA,MAAOC,EAAiE,EAAjEA,EAAGX,EAA8D,EAA9DA,QAASY,EAAqD,EAArDA,SAAUb,EAA2C,EAA3CA,YAAaF,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAcnE,OACE,sBAAKS,UACH,gBACEK,IAAaf,EAAa,YAAc,KACxCe,GAAYf,EAAa,aAAe,KACzCE,EAAcY,EAAI,EAAI,UAAY,IAJrC,UAME,qBAAKI,QAAS,kBAlBlB,SAAoBJ,EAAGd,EAAWe,GAC5BA,EAGMA,IAAaf,EACrBC,GAAa,GAEbE,EAAQW,IALRX,IAAUW,GACVb,GAAa,IAeOkB,CAAWL,EAAGd,EAAWe,IAAWL,UAAU,QAClE,qBAAKA,UAAU,QAAf,SAAuB,+BAAOG,UAK9BO,EAAW,SAAEC,GAGjB,IAAIC,EAAUD,EAAMnB,YA4BpB,SAASqB,EAAUC,GACD,IAAZF,GAAmBE,EAEZF,GAAWD,EAAMb,OAAOiB,QAAWJ,EAAMrB,WAAawB,EAC/DE,QAAQC,IAAI,iBAETN,EAAMrB,YAAcwB,EACrBH,EAAMpB,cAAa,GACVoB,EAAMrB,WAAcwB,EAIrBH,EAAMrB,WAAawB,KACzBF,EACFD,EAAMlB,QAAQmB,GACdD,EAAMpB,cAAa,IAEnBoB,EAAMpB,cAAa,MARjBqB,EACFD,EAAMlB,QAAQmB,GACdD,EAAMpB,cAAa,IATrByB,QAAQC,IAAI,iBAoBhB,OACE,sBAAKjB,UAAU,WAAf,UAEE,sBAAKA,UAAU,sBAAf,UACE,yCACA,gCACE,gCACE,uBACEkB,KAAK,QACLC,GAAG,YACHC,KAAK,gBACLN,MAAM,YACNO,QAA+B,cAAtBV,EAAMf,YACf0B,SAAU,SAACC,GAAD,OAAOZ,EAAMd,UAAU0B,EAAEC,OAAOV,UAE5C,uBAAOd,UAAU,QAAQyB,QAAQ,YAAjC,SAA6C,wCAC7C,uBACEP,KAAK,QACLC,GAAG,cACHC,KAAK,gBACLN,MAAM,cACNO,QAA+B,gBAAtBV,EAAMf,YACf0B,SAAU,SAACC,GAAD,OAAOZ,EAAMd,UAAU0B,EAAEC,OAAOV,UAE5C,uBAAOd,UAAU,QAAQyB,QAAQ,cAAjC,SAA+C,6CAEjD,oBAAIzB,UAAU,qBACd,gCACE,uBACEkB,KAAK,QACLC,GAAG,iBACHC,KAAK,eACLN,MAAM,iBACNO,QAA8B,mBAArBV,EAAMjB,WACf4B,SAAU,SAACC,GAAD,OAAOZ,EAAMhB,SAAS4B,EAAEC,OAAOV,UAE3C,uBAAOd,UAAU,QAAQyB,QAAQ,iBAAjC,SAAkD,mDAClD,uBACEP,KAAK,QACLC,GAAG,gBACHC,KAAK,eACLN,MAAM,gBACNO,QAA8B,kBAArBV,EAAMjB,WACf4B,SAAU,SAACC,GAAD,OAAOZ,EAAMhB,SAAS4B,EAAEC,OAAOV,UAE3C,uBAAOd,UAAU,QAAQyB,QAAQ,gBAAjC,SAAiD,wDAKvD,sBAAKzB,UAAU,iBAAf,UACE,wCACA,sBAAKA,UAAU,WAAf,UACE,wBACEA,UAAW,OAAsB,IAAZY,EAAiB,gBAAkB,IACxDJ,QAAS,kBAAMK,GAAU,IAF3B,SAGE,2CAEF,wBACEb,UAAW,OAAUW,EAAMrB,WAAasB,IAAYD,EAAMb,OAAOiB,OAAU,gBAAkB,IAC7FP,QAAS,kBAAMK,GAAU,IAF3B,SAGE,6CAGJ,oBAAIb,UAAU,uBACd,sBAAKA,UAAU,WAAf,UACE,wBACEA,UAAW,OAAUW,EAAMb,OAAOiB,QAAU,EAAK,gBAAkB,IACnEP,QAzGS,WACdG,EAAMb,OAAOiB,OAAS,IACvBJ,EAAMZ,UAAUY,EAAMb,OAAO4B,MAAM,GAAG,IAGlCf,EAAMb,OAAOiB,QAAUH,IAAaD,EAAMrB,WAC5CqB,EAAMlB,UAAUmB,GAChBD,EAAMpB,cAAa,IACXoB,EAAMb,OAAOiB,QAAUH,GAC/BD,EAAMlB,UAAUmB,KA8Fd,SAGE,4CAEF,wBACEZ,UAAW,OAAUW,EAAMb,OAAOiB,QAvH5B,IAuHiD,gBAAkB,IACzEP,QArHM,WACXG,EAAMb,OAAOiB,OAJF,KAKZJ,EAAMZ,UAAN,sBAAoBY,EAAMb,QAA1B,kBAA4Ca,EAAMb,OAAOiB,YAiHrD,SAGE,mDCxNGY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClD,EAAD,MAEFmD,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.208e19ef.chunk.js","sourcesContent":["import './App.scss'\nimport { useState } from 'react'\n\nexport default function Timeline() {\n\n  const\n    [completed, setCompleted] = useState(false),\n    [currentStep, setStep] = useState(3),\n\n    [labelAlign, setAlign] = useState('labels-between'),\n    [labelUpDown, setUpDown] = useState('labels-down'),\n\n    [labels, setLabels] = useState([\n      'Step 1',\n      'Step 2',\n      'Step 3',\n      'Step 4'\n    ])\n\n  return (\n    <div className=\"container\">\n      <div className=\"greeting\">\n        <p>Hey!</p>\n        <p>Timeline is {\n          !completed ? <span className=\"marker\">in progress</span> : ''\n        } {\n          (currentStep === 0) ? 'not begun yet' : `on Step ${currentStep}`\n        }.</p>\n      </div>\n      <Stepper\n        labels={labels}\n        setStep={setStep}\n        completed={completed}\n        currentStep={currentStep}\n        setCompleted={setCompleted}\n        labelUpDown={labelUpDown}\n        labelAlign={labelAlign}\n      />\n      <Controls\n        setCompleted={setCompleted}\n        currentStep={currentStep}\n        labelUpDown={labelUpDown}\n        labelAlign={labelAlign}\n        setUpDown={setUpDown}\n        completed={completed}\n        setLabels={setLabels}\n        setAlign={setAlign}\n        setStep={setStep}\n        labels={labels}\n      />\n    </div>\n  )\n\n}\n\nconst Stepper = ({ labels, setStep, currentStep, completed, setCompleted, labelUpDown, labelAlign }) => {\n  return (\n    <div className={`stepper ${labelUpDown} ${labelAlign}`}>\n      {labels.map((label, i) => (\n        <Step\n          selected={currentStep === i + 1}\n          setCompleted={setCompleted}\n          currentStep={currentStep}\n          completed={completed}\n          setStep={setStep}\n          label={label}\n          key={i.toString()}\n          i={i}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst Step = ({ label, i, setStep, selected, currentStep, completed, setCompleted }) => {\n\n  // Switching Step\n  function updateStep(i, completed, selected) {\n    if(!selected){\n      setStep(++i)\n      setCompleted(false)\n    } else if(selected && !completed){\n      setCompleted(true)\n    } else {\n      setStep(i)\n    }\n  }\n\n  return (\n    <div className={(\n      'step-wrapper' +\n      ((selected && !completed) ? ' selected' : '') +\n      ((selected && completed) ? ' completed' : '') +\n      (currentStep > i + 1 ? ' passed' : '')\n    )}>\n      <div onClick={() => updateStep(i, completed, selected)} className=\"dot\"></div>\n      <div className=\"label\"><span>{label}</span></div>\n    </div>\n  )\n}\n\nconst Controls = ( props ) => {\n\n  // Current Step for short\n  let current = props.currentStep\n\n  // Timeline limit\n  const maxStep = 100\n\n  // Add Step\n  const addStep = () => {\n    if(props.labels.length < maxStep){\n      props.setLabels([...props.labels, `Step ${++props.labels.length}`])\n    }\n  }\n\n  // Remove Step\n  const removeStep = () => {\n    if(props.labels.length > 1){\n      props.setLabels(props.labels.slice(0,-1))\n\n      // Correct Current Step\n      if((props.labels.length <= current) && !props.completed){\n        props.setStep(--current)\n        props.setCompleted(true)\n      } else if(props.labels.length <= current){\n        props.setStep(--current)\n      }\n    }\n  }\n\n  // Shifting Step\n  function stepShift(value) {\n    if((current === 0) && !value){\n      console.log('Limit by Prev')\n    } else if((current >= props.labels.length) && props.completed && value){\n      console.log('Limit by Next')\n    } else {\n      if(props.completed && !value){\n        props.setCompleted(false)\n      } else if(!props.completed && !value){\n        --current\n        props.setStep(current)\n        props.setCompleted(true)\n      } else if(props.completed && value){\n        ++current\n        props.setStep(current)\n        props.setCompleted(false)\n      } else {\n        props.setCompleted(true)\n      }\n    }\n  }\n\n  return (\n    <div className=\"controls\">\n\n      <div className=\"timeline-appearance\">\n        <h3>Labels:</h3>\n        <div>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"labels-up\"\n              name=\"labels-updown\"\n              value=\"labels-up\"\n              checked={props.labelUpDown === 'labels-up'}\n              onChange={(e) => props.setUpDown(e.target.value)}\n            />\n            <label className=\"radio\" htmlFor=\"labels-up\"><span>Up</span></label>\n            <input\n              type=\"radio\"\n              id=\"labels-down\"\n              name=\"labels-updown\"\n              value=\"labels-down\"\n              checked={props.labelUpDown === 'labels-down'}\n              onChange={(e) => props.setUpDown(e.target.value)}\n              />\n            <label className=\"radio\" htmlFor=\"labels-down\"><span>Down</span></label>\n          </div>\n          <hr className=\"divider-vertical\"/>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"labels-between\"\n              name=\"labels-align\"\n              value=\"labels-between\"\n              checked={props.labelAlign === 'labels-between'}\n              onChange={(e) => props.setAlign(e.target.value)}\n            />\n            <label className=\"radio\" htmlFor=\"labels-between\"><span>Between steps</span></label>\n            <input\n              type=\"radio\"\n              id=\"labels-nearby\"\n              name=\"labels-align\"\n              value=\"labels-nearby\"\n              checked={props.labelAlign === 'labels-nearby'}\n              onChange={(e) => props.setAlign(e.target.value)}\n            />\n            <label className=\"radio\" htmlFor=\"labels-nearby\"><span>Near step</span></label>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"timeline-steps\">\n        <h3>Steps:</h3>\n        <div className=\"btn-wrap\">\n          <button\n            className={'btn' + ((current === 0) ? ' btn-disabled' : '' )}\n            onClick={() => stepShift(false)}>\n            <span>Prev.</span>\n          </button>\n          <button\n            className={'btn' + ((props.completed && current === props.labels.length) ? ' btn-disabled' : '')}\n            onClick={() => stepShift(true)}>\n            <span>Next</span>\n          </button>\n        </div>\n        <hr className=\"divider-horizontal\" />\n        <div className=\"btn-wrap\">\n          <button\n            className={'btn' + ((props.labels.length <= 1) ? ' btn-disabled' : '' )}\n            onClick={removeStep}>\n            <span>Remove</span>\n          </button>\n          <button\n            className={'btn' + ((props.labels.length >= maxStep) ? ' btn-disabled' : '' )}\n            onClick={addStep}>\n            <span>Add</span>\n          </button>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Timeline from './Timeline';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Timeline />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}